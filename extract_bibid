#!/bin/sh
# This script takes a single pdf-file argument and attempts extraction of bibliograpic identier. 
# This identifier, along the identifier type, is given as output.
[ -z "$1" ] && echo "Give either a pdf file or a DOI/ArXivID/ISBN as an argument." && exit 1
[ ! -f "$1" ] && echo "Give either a valid pdf file or a DOI/ArXivID/ISBN as an argument." && exit 1
[ -f "$1" ] && file="${1}"

bocfolder="$(which getbib | sed "s/\/getbib//g")"
bibid_types="$(ls ${bocfolder} | grep ".*_to_bibtex" | sed "s/_to_bibtex//g" )"
check_for_id(){
echo "${bibid_types}" | while read iden_type; do
	# Try to get Identifier and ID.type from pdfinfo or pdftotext output.
	# while loop is executed in subshell
	id="$(pdfinfo "${file}" | grep -io -P "${iden_type}:(\s)?[^\s]*")" || 
	id="$(pdftotext "${file}" 2>/dev/null - | grep -io -P "${iden_type}:(\s)?[^\s]*" -m 1)" 
	# || echo "no ${iden_type} found" 
	[ ! -z "$id" ] && id_type="${iden_type}" && echo "${id_type} ${id}" && break 
done 
}
id_type="$(check_for_id | cut -d " " -f1)"
id="$(check_for_id | cut -d " " -f2)"

# Output:
[ -z "${id}" ] && echo "No ID found" && exit 1
id_mod="$(echo "$id" | grep -io -P "(?<=${id_type}:)(\s)?[^\s]*" | sed "s/ //g")"
echo "${id_type}:${id_mod}"

